// <auto-generated />
using System;
using AllPolicyInsurance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AllPolicyInsurance.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220213004843_addSeeding")]
    partial class addSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AllPolicyInsurance.Models.Address", b =>
                {
                    b.Property<byte>("AddressId")
                        .HasColumnType("tinyint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = (byte)1,
                            City = "Cincinatti",
                            PostalCode = "45215",
                            State = "OH",
                            Street = "123 Main St"
                        },
                        new
                        {
                            AddressId = (byte)2,
                            City = "Cincinatti",
                            PostalCode = "45203",
                            State = "OH",
                            Street = "77 Elm Avenue"
                        },
                        new
                        {
                            AddressId = (byte)3,
                            City = "Las Vegas",
                            PostalCode = "89105",
                            State = "NV",
                            Street = "702 Flamingo Rd"
                        },
                        new
                        {
                            AddressId = (byte)4,
                            City = "Henderson",
                            PostalCode = "89119",
                            State = "NV",
                            Street = "21 Tropicana Ave"
                        },
                        new
                        {
                            AddressId = (byte)5,
                            City = "San Fransisco",
                            PostalCode = "94117",
                            State = "CA",
                            Street = "88 Haight St"
                        },
                        new
                        {
                            AddressId = (byte)6,
                            City = "San Fransisco",
                            PostalCode = "94117",
                            State = "CA",
                            Street = "420 Ashbury"
                        },
                        new
                        {
                            AddressId = (byte)7,
                            City = "Oakland",
                            PostalCode = "94604",
                            State = "CA",
                            Street = "570 Pharcyde Lane"
                        },
                        new
                        {
                            AddressId = (byte)8,
                            City = "Oakland",
                            PostalCode = "94616",
                            State = "CA",
                            Street = "E. 40 Major Way "
                        },
                        new
                        {
                            AddressId = (byte)9,
                            City = "Los Angeles",
                            PostalCode = "90210",
                            State = "CA",
                            Street = "88 Pacific Overlook Blvd"
                        },
                        new
                        {
                            AddressId = (byte)10,
                            City = "Newport",
                            PostalCode = "90004",
                            State = "CA",
                            Street = "8 Mamba Street"
                        },
                        new
                        {
                            AddressId = (byte)11,
                            City = "Brooklyn",
                            PostalCode = "11211",
                            State = "NY",
                            Street = "123 Fulton Street"
                        },
                        new
                        {
                            AddressId = (byte)12,
                            City = "Brooklyn",
                            PostalCode = "11206",
                            State = "NY",
                            Street = "1120 Flatbush Ave "
                        });
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.InsurancePolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("AddressId")
                        .HasColumnType("tinyint");

                    b.Property<string>("DriversLicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PremiumPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("VehicleId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("VehicleId");

                    b.ToTable("InsurancePolicies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ba575e0-4364-49f2-8a24-301f871de0a1"),
                            AddressId = (byte)1,
                            DriversLicenseNumber = "05012816",
                            EffectiveDate = new DateTime(2022, 1, 13, 16, 48, 43, 352, DateTimeKind.Local).AddTicks(3831),
                            ExpirationDate = new DateTime(2024, 2, 12, 16, 48, 43, 354, DateTimeKind.Local).AddTicks(9059),
                            FirstName = "Joe",
                            LastName = "Burrow",
                            PolicyId = 370600,
                            PremiumPrice = 350.0m,
                            VehicleId = (byte)1
                        },
                        new
                        {
                            Id = new Guid("9cbf58ab-3142-464b-a25d-5db51520972f"),
                            AddressId = (byte)2,
                            DriversLicenseNumber = "58143643",
                            EffectiveDate = new DateTime(2021, 4, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1226),
                            ExpirationDate = new DateTime(2025, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1244),
                            FirstName = "Ja'Marr",
                            LastName = "Chase",
                            PolicyId = 506435,
                            PremiumPrice = 225.0m,
                            VehicleId = (byte)2
                        },
                        new
                        {
                            Id = new Guid("b70062b6-56ab-4374-98fd-9261e1b139c7"),
                            AddressId = (byte)3,
                            DriversLicenseNumber = "88416272",
                            EffectiveDate = new DateTime(2014, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1259),
                            ExpirationDate = new DateTime(2018, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1261),
                            FirstName = "Mark",
                            LastName = "Stone",
                            PolicyId = 648210,
                            PremiumPrice = 145.0m,
                            VehicleId = (byte)3
                        },
                        new
                        {
                            Id = new Guid("5923aa15-958e-46cf-933b-5d7d7dabe023"),
                            AddressId = (byte)4,
                            DriversLicenseNumber = "67530787",
                            EffectiveDate = new DateTime(2019, 11, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1267),
                            ExpirationDate = new DateTime(2021, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1269),
                            FirstName = "Larry",
                            LastName = "Johnson",
                            PolicyId = 884759,
                            PremiumPrice = 225.0m,
                            VehicleId = (byte)4
                        },
                        new
                        {
                            Id = new Guid("00390dae-ab04-435a-8d03-d1d667e0913c"),
                            AddressId = (byte)5,
                            DriversLicenseNumber = "82232261",
                            EffectiveDate = new DateTime(2021, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1273),
                            ExpirationDate = new DateTime(2025, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1275),
                            FirstName = "Steph",
                            LastName = "Curry",
                            PolicyId = 850485,
                            PremiumPrice = 315.0m,
                            VehicleId = (byte)5
                        },
                        new
                        {
                            Id = new Guid("21985b7d-6bdf-48c0-90dd-84211b020eca"),
                            AddressId = (byte)6,
                            DriversLicenseNumber = "58677291",
                            EffectiveDate = new DateTime(2022, 1, 13, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1279),
                            ExpirationDate = new DateTime(2027, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1281),
                            FirstName = "Draymond",
                            LastName = "Green",
                            PolicyId = 340004,
                            PremiumPrice = 200.0m,
                            VehicleId = (byte)6
                        },
                        new
                        {
                            Id = new Guid("0f2d629d-9382-4892-bb00-66fb1b0cd02a"),
                            AddressId = (byte)7,
                            DriversLicenseNumber = "58401113",
                            EffectiveDate = new DateTime(2014, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1286),
                            ExpirationDate = new DateTime(2020, 6, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1288),
                            FirstName = "Andrew",
                            LastName = "Wiggins",
                            PolicyId = 485716,
                            PremiumPrice = 225.0m,
                            VehicleId = (byte)7
                        },
                        new
                        {
                            Id = new Guid("e347c6cf-66a2-4598-8962-e8cc01c4b49b"),
                            AddressId = (byte)8,
                            DriversLicenseNumber = "23047374",
                            EffectiveDate = new DateTime(2020, 11, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1298),
                            ExpirationDate = new DateTime(2025, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1300),
                            FirstName = "Debo",
                            LastName = "Samuel",
                            PolicyId = 344132,
                            PremiumPrice = 345.0m,
                            VehicleId = (byte)8
                        },
                        new
                        {
                            Id = new Guid("865369c4-b0aa-4181-8351-a0216085b9ec"),
                            AddressId = (byte)9,
                            DriversLicenseNumber = "50028651",
                            EffectiveDate = new DateTime(2016, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1305),
                            ExpirationDate = new DateTime(2021, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1307),
                            FirstName = "Cooper",
                            LastName = "Kupp",
                            PolicyId = 965105,
                            PremiumPrice = 65.0m,
                            VehicleId = (byte)9
                        },
                        new
                        {
                            Id = new Guid("e166e525-e2b0-4faf-b0fb-272265b0b927"),
                            AddressId = (byte)10,
                            DriversLicenseNumber = "39527559",
                            EffectiveDate = new DateTime(2016, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1312),
                            ExpirationDate = new DateTime(2021, 2, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1314),
                            FirstName = "Kobe",
                            LastName = "Bryant",
                            PolicyId = 140236,
                            PremiumPrice = 65.0m,
                            VehicleId = (byte)10
                        },
                        new
                        {
                            Id = new Guid("eb1d4a1d-cf7d-44b4-98b7-3f4ba75e6c16"),
                            AddressId = (byte)11,
                            DriversLicenseNumber = "15182572",
                            EffectiveDate = new DateTime(2022, 1, 28, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1318),
                            ExpirationDate = new DateTime(2025, 10, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1320),
                            FirstName = "Kyrie",
                            LastName = "Irving",
                            PolicyId = 766703,
                            PremiumPrice = 311.0m,
                            VehicleId = (byte)11
                        },
                        new
                        {
                            Id = new Guid("684caae3-2647-4554-a6d5-6a9b1c590a3d"),
                            AddressId = (byte)12,
                            DriversLicenseNumber = "06884140",
                            EffectiveDate = new DateTime(2020, 9, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1324),
                            ExpirationDate = new DateTime(2024, 8, 12, 16, 48, 43, 355, DateTimeKind.Local).AddTicks(1327),
                            FirstName = "Kevin",
                            LastName = "Durant",
                            PolicyId = 962573,
                            PremiumPrice = 420.0m,
                            VehicleId = (byte)12
                        });
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.Vehicle", b =>
                {
                    b.Property<byte>("VehicleId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = (byte)1,
                            Make = "Tesla",
                            Model = "Model X",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = (byte)2,
                            Make = "Porsche",
                            Model = "Macan",
                            Year = 2022
                        },
                        new
                        {
                            VehicleId = (byte)3,
                            Make = "Ford",
                            Model = "Mustang",
                            Year = 1966
                        },
                        new
                        {
                            VehicleId = (byte)4,
                            Make = "Dodge",
                            Model = "Viper",
                            Year = 1995
                        },
                        new
                        {
                            VehicleId = (byte)5,
                            Make = "Mercedes-benz",
                            Model = "SL-63",
                            Year = 2019
                        },
                        new
                        {
                            VehicleId = (byte)6,
                            Make = "Oldsmobile",
                            Model = "Cutlass",
                            Year = 1967
                        },
                        new
                        {
                            VehicleId = (byte)7,
                            Make = "Shelby",
                            Model = "G.T. 350",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = (byte)8,
                            Make = "BMW",
                            Model = "M6",
                            Year = 2021
                        },
                        new
                        {
                            VehicleId = (byte)9,
                            Make = "Chevrolet",
                            Model = "Tahoe",
                            Year = 1993
                        },
                        new
                        {
                            VehicleId = (byte)10,
                            Make = "McLaren",
                            Model = "F1",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = (byte)11,
                            Make = "Lamborghini",
                            Model = "Huracan",
                            Year = 2022
                        },
                        new
                        {
                            VehicleId = (byte)12,
                            Make = "Tesla",
                            Model = "Model X",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.InsurancePolicy", b =>
                {
                    b.HasOne("AllPolicyInsurance.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AllPolicyInsurance.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
