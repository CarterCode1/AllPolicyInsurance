// <auto-generated />
using System;
using AllPolicyInsurance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AllPolicyInsurance.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AllPolicyInsurance.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsurancePolicyId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("InsurancePolicyId")
                        .IsUnique();

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Cincinatti",
                            InsurancePolicyId = 581718,
                            PostalCode = "45215",
                            State = "OH",
                            Street = "123 Main St"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "Cincinatti",
                            InsurancePolicyId = 573055,
                            PostalCode = "45203",
                            State = "OH",
                            Street = "77 Elm Avenue"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Las Vegas",
                            InsurancePolicyId = 418377,
                            PostalCode = "89105",
                            State = "NV",
                            Street = "702 Flamingo Rd"
                        },
                        new
                        {
                            AddressId = 4,
                            City = "Henderson",
                            InsurancePolicyId = 148906,
                            PostalCode = "89119",
                            State = "NV",
                            Street = "21 Tropicana Ave"
                        },
                        new
                        {
                            AddressId = 5,
                            City = "San Fransisco",
                            InsurancePolicyId = 823615,
                            PostalCode = "94117",
                            State = "CA",
                            Street = "88 Haight St"
                        },
                        new
                        {
                            AddressId = 6,
                            City = "San Fransisco",
                            InsurancePolicyId = 332372,
                            PostalCode = "94117",
                            State = "CA",
                            Street = "420 Ashbury"
                        },
                        new
                        {
                            AddressId = 7,
                            City = "Oakland",
                            InsurancePolicyId = 539379,
                            PostalCode = "94604",
                            State = "CA",
                            Street = "570 Pharcyde Lane"
                        },
                        new
                        {
                            AddressId = 8,
                            City = "Oakland",
                            InsurancePolicyId = 949164,
                            PostalCode = "94616",
                            State = "CA",
                            Street = "E. 40 Major Way "
                        },
                        new
                        {
                            AddressId = 9,
                            City = "Los Angeles",
                            InsurancePolicyId = 723592,
                            PostalCode = "90210",
                            State = "CA",
                            Street = "88 Pacific Overlook Blvd"
                        },
                        new
                        {
                            AddressId = 10,
                            City = "Newport",
                            InsurancePolicyId = 493847,
                            PostalCode = "90004",
                            State = "CA",
                            Street = "8 Mamba Street"
                        },
                        new
                        {
                            AddressId = 11,
                            City = "Brooklyn",
                            InsurancePolicyId = 609698,
                            PostalCode = "11211",
                            State = "NY",
                            Street = "123 Fulton Street"
                        },
                        new
                        {
                            AddressId = 12,
                            City = "Brooklyn",
                            InsurancePolicyId = 103575,
                            PostalCode = "11206",
                            State = "NY",
                            Street = "1120 Flatbush Ave "
                        });
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.InsurancePolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DriversLicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PremiumPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PolicyId");

                    b.ToTable("InsurancePolicies");

                    b.HasData(
                        new
                        {
                            PolicyId = 581718,
                            DriversLicenseNumber = "80160020",
                            EffectiveDate = new DateTime(2022, 1, 14, 14, 35, 52, 466, DateTimeKind.Local).AddTicks(3765),
                            ExpirationDate = new DateTime(2024, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(373),
                            FirstName = "Joe",
                            LastName = "Burrow",
                            PremiumPrice = 350.0m
                        },
                        new
                        {
                            PolicyId = 573055,
                            DriversLicenseNumber = "76286605",
                            EffectiveDate = new DateTime(2021, 4, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2111),
                            ExpirationDate = new DateTime(2025, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2128),
                            FirstName = "Ja'Marr",
                            LastName = "Chase",
                            PremiumPrice = 225.0m
                        },
                        new
                        {
                            PolicyId = 418377,
                            DriversLicenseNumber = "63919800",
                            EffectiveDate = new DateTime(2014, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2143),
                            ExpirationDate = new DateTime(2018, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2145),
                            FirstName = "Mark",
                            LastName = "Stone",
                            PremiumPrice = 145.0m
                        },
                        new
                        {
                            PolicyId = 148906,
                            DriversLicenseNumber = "60458528",
                            EffectiveDate = new DateTime(2019, 11, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2150),
                            ExpirationDate = new DateTime(2021, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2152),
                            FirstName = "Larry",
                            LastName = "Johnson",
                            PremiumPrice = 225.0m
                        },
                        new
                        {
                            PolicyId = 823615,
                            DriversLicenseNumber = "86985124",
                            EffectiveDate = new DateTime(2021, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2155),
                            ExpirationDate = new DateTime(2025, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2157),
                            FirstName = "Steph",
                            LastName = "Curry",
                            PremiumPrice = 315.0m
                        },
                        new
                        {
                            PolicyId = 332372,
                            DriversLicenseNumber = "12713028",
                            EffectiveDate = new DateTime(2022, 1, 14, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2161),
                            ExpirationDate = new DateTime(2027, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2163),
                            FirstName = "Draymond",
                            LastName = "Green",
                            PremiumPrice = 200.0m
                        },
                        new
                        {
                            PolicyId = 539379,
                            DriversLicenseNumber = "17282181",
                            EffectiveDate = new DateTime(2014, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2242),
                            ExpirationDate = new DateTime(2020, 6, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2245),
                            FirstName = "Andrew",
                            LastName = "Wiggins",
                            PremiumPrice = 225.0m
                        },
                        new
                        {
                            PolicyId = 949164,
                            DriversLicenseNumber = "10111757",
                            EffectiveDate = new DateTime(2020, 11, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2249),
                            ExpirationDate = new DateTime(2025, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2251),
                            FirstName = "Debo",
                            LastName = "Samuel",
                            PremiumPrice = 345.0m
                        },
                        new
                        {
                            PolicyId = 723592,
                            DriversLicenseNumber = "08007355",
                            EffectiveDate = new DateTime(2016, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2255),
                            ExpirationDate = new DateTime(2021, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2257),
                            FirstName = "Cooper",
                            LastName = "Kupp",
                            PremiumPrice = 65.0m
                        },
                        new
                        {
                            PolicyId = 493847,
                            DriversLicenseNumber = "61527897",
                            EffectiveDate = new DateTime(2016, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2260),
                            ExpirationDate = new DateTime(2021, 2, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2262),
                            FirstName = "Kobe",
                            LastName = "Bryant",
                            PremiumPrice = 65.0m
                        },
                        new
                        {
                            PolicyId = 609698,
                            DriversLicenseNumber = "82404778",
                            EffectiveDate = new DateTime(2022, 1, 29, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2266),
                            ExpirationDate = new DateTime(2025, 10, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2267),
                            FirstName = "Kyrie",
                            LastName = "Irving",
                            PremiumPrice = 311.0m
                        },
                        new
                        {
                            PolicyId = 103575,
                            DriversLicenseNumber = "82302017",
                            EffectiveDate = new DateTime(2020, 9, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2271),
                            ExpirationDate = new DateTime(2024, 8, 13, 14, 35, 52, 469, DateTimeKind.Local).AddTicks(2273),
                            FirstName = "Kevin",
                            LastName = "Durant",
                            PremiumPrice = 420.0m
                        });
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsurancePolicyId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("InsurancePolicyId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            InsurancePolicyId = 581718,
                            Make = "Tesla",
                            Model = "Model X",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 2,
                            InsurancePolicyId = 573055,
                            Make = "Porsche",
                            Model = "Macan",
                            Year = 2022
                        },
                        new
                        {
                            VehicleId = 3,
                            InsurancePolicyId = 418377,
                            Make = "Ford",
                            Model = "Mustang",
                            Year = 1966
                        },
                        new
                        {
                            VehicleId = 4,
                            InsurancePolicyId = 148906,
                            Make = "Dodge",
                            Model = "Viper",
                            Year = 1995
                        },
                        new
                        {
                            VehicleId = 5,
                            InsurancePolicyId = 823615,
                            Make = "Mercedes-benz",
                            Model = "SL-63",
                            Year = 2019
                        },
                        new
                        {
                            VehicleId = 6,
                            InsurancePolicyId = 332372,
                            Make = "Oldsmobile",
                            Model = "Cutlass",
                            Year = 1967
                        },
                        new
                        {
                            VehicleId = 7,
                            InsurancePolicyId = 539379,
                            Make = "Shelby",
                            Model = "G.T. 350",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 8,
                            InsurancePolicyId = 949164,
                            Make = "BMW",
                            Model = "M6",
                            Year = 2021
                        },
                        new
                        {
                            VehicleId = 9,
                            InsurancePolicyId = 723592,
                            Make = "Chevrolet",
                            Model = "Tahoe",
                            Year = 1993
                        },
                        new
                        {
                            VehicleId = 10,
                            InsurancePolicyId = 493847,
                            Make = "McLaren",
                            Model = "F1",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 11,
                            InsurancePolicyId = 609698,
                            Make = "Lamborghini",
                            Model = "Huracan",
                            Year = 2022
                        },
                        new
                        {
                            VehicleId = 12,
                            InsurancePolicyId = 103575,
                            Make = "Tesla",
                            Model = "Model X",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.Address", b =>
                {
                    b.HasOne("AllPolicyInsurance.Models.InsurancePolicy", "InsurancePolicy")
                        .WithOne("Address")
                        .HasForeignKey("AllPolicyInsurance.Models.Address", "InsurancePolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsurancePolicy");
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.Vehicle", b =>
                {
                    b.HasOne("AllPolicyInsurance.Models.InsurancePolicy", "InsurancePolicy")
                        .WithMany("Vehicles")
                        .HasForeignKey("InsurancePolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsurancePolicy");
                });

            modelBuilder.Entity("AllPolicyInsurance.Models.InsurancePolicy", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
